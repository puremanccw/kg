<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
	<!-- 有严格的顺序 -->
	<properties resource="generator.properties"/>
	<!-- MBG运行时需要用到的jar包添加到classpath下 -->
	<classPathEntry location="${classPath}"/>
	<!-- 用于指定生成一组对象的环境：指定要连接的数据库，要生成对象的类型、要处理的数据库表 -->
	<!-- 
		id：					必选属性
		defaultModelType：	定义MBG如何生成实体类
				conditional：默认值。
				flat：该模型为没一张表只生成一个实体类。这个实体类包含表中的所有字段。这种模型最简单，推荐使用
				hierarchical：
	 -->
	<context id="oracle" targetRuntime="Mybatis3" defaultModelType="flat">
		<!-- 指定数据库连接信息 -->
		<jdbcConnection driverClass="${driverClass}" 
						connectionURL="${connectionURL}"
						userId="${userName}"
						password="${password}">
			<property name="remarkable" value="true"/>
		</jdbcConnection>
		
		<!-- 
			MBG生成的代码中包含注释信息
			suppressAllComments:	阻止生成注释，默认为false
			suppressDate：			阻止生成的注释包含时间戳，默认为false
		 -->
		<commentGenerator>
            <property name="suppressAllComments" value="true"/>
            <property name="suppressDate" value="true"/>
        </commentGenerator>
        
       	<!-- 
       		控制生成的实体类
       		targetPackage：生成实体类存放的包名
       		targetProject：指定目标项目路径，使用的是文件系统的绝对路径。
       		
       		constructorBased：该属性只对Mybatis3有效，true：使用构造方法入参；false：使用setter方式入参
       		enableSubPackages：true：MBG会根据catalog和schema来生成子包；false：直接用targetPackage属性
       		immutable：配置实体类属性是否可变；true：constructorBased不管设置成什么都会使用构造方法入参，不会生成setter方法
       					false：实体类属性就可以改变。默认为false
       		rootClass：设置所有实体类的基类；如果设置，需要使用类的全限定名称。
       					如果MBG能够加载rootClass，那么MBG不会覆盖和父类中完全匹配的属性
       		trimStrings：是否对数据库查询结果进行trim操作，
       	 -->
        <javaModelGenerator targetPackage="${modelPackage}"
                            targetProject=".\src\main\java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        
        <!-- 
        	如果不配置该元素，不会生成Mapper接口
        	type：用于选择一个预定义的客户端代码生成器
        		MyBatis3：
        			ANNOTATEDMAPPER：基于注解的Mapper接口，不会有对应的XML映射文件
        			MIXEDMAPPER：XML和注解的混合形式
        			XMLMAPPER：所以的方法都在XML中，接口调用依赖XML文件。
        	targetPackage：生成实体类存放的包名
        	targetProject：指定目标项目路径，使用的是文件系统的绝对路径。
        				
         -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="${daoMapperPackage}"
                             targetProject="./src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>
        
        <!-- 
        	如果targetRuntime目标是Mybatis3，只有当<javaClientGenerator>需要XML时，该元素必须配置一个
        	如果没有配置<javaClientGenerator>，则使用以下规则：
        		如果指定了一个<sqlMapGenerator>，那么MBG将只生成XML的SQL映射文件和实体类
        		如果没有指定<sqlMapGenerator>，那么MBG将只生成实体类。
         -->
        <sqlMapGenerator targetPackage="${sqlMapperPackage}" targetProject=".\">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        
        <!-- 指定JDBC类型和Java类型如何转换 -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        
        <!-- 
        	该元素配置要通过内省的表，只有配置的才会生成实体类和其他文件
        	tableName：指定要生成的表名，可以使用sql通配符匹配多个表
        	
         -->
        <table schema="" tableName="member" domainObjectName=“MemberDO” enableCountByExample="true"
               enableUpdateByExample="true"
               enableSelectByExample="true"
               selectByExampleQueryId="true"
               enableUpdateByPrimaryKey="true"
               enableDeleteByExample="false"
               enableDeleteByPrimaryKey="false"/>
	</context>
	
	<!-- 
		1、关于Example方法：Example方法虽然很强大，但是SQL不易管理，因此不建议使用
		2、取消Example方法的配置，通过<table>上的enablexxxExample方法可以屏蔽，但是最好的方法是在<context>上设置targetRuntime=“Mybatis3Simple”
		3、关于实体类的modelType，建议使用DefaultModelType="flat"，只有一个对象的情况下管理毕竟方便，使用也简单。
		4、关于注释<commentGenerator>，不管你是否要重写自己的注释生成器，有一点不能忘记，那就是注释中一定要保留@mbggenerated，
			MBG通过该字符串来判断代码是否为代码生成器生成的代码，有盖标记在重新生成的时候会被删除，不会重复。不会在XML中出现重复元素。
		5、使用MBG生成的代码，建议尽可能不要去修改自动生成的代码，而且要生成带有@mbggenerated，这样才不会在每次重新生成代码的时候需要手动修改好多内容
		6、在<commentGenerator>中，建议一定要保留suppressAllComments属性（使用默认值false），一定要取消时间戳suppressDate，避免重复提交SVN
		7、<jdbcConnection>建议将JDBC驱动放到项目的classpath下，而不是使用<classPathEntry>来引入jar包，主要考虑到所有开发人员的统一性。
		8、当数据库字段使用CHAR时，建议在<javaModelGenerator>中设置<property name="trimStrings" value="true"/>,可以自动去掉不必要的空格
		9、在<javaClientGenerator>中，建议设置type="XMLMAPPER"，不建议使用注解或混合模式，代码和SQL完全分离易于维护。
		10、建议尽可能在<table>中配置<generatedKey>，避免手工操作，以便于MBG重复执行代码生成。
	 -->
</generatorConfiguration>